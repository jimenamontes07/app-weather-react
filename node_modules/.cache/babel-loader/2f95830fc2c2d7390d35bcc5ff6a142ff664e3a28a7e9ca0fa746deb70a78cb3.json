{"ast":null,"code":"var _jsxFileName = \"/Users/jimen/Dropbox/Mac/Documents/react-weather/src/Weather.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport CurrentTemp from \"./CurrentTemp\";\nimport Forecast from \"./Forecast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Weather(props) {\n  _s();\n  let [date, setDate] = useState(null);\n  window.onload = function () {\n    loadDate();\n  };\n  let days = [\"Mon\", \"Tue\", \"Wed\", \"Thurs\", \"Fri\", \"Sat\", \"Sun\"];\n  function loadDate() {\n    let now = new Date();\n    let day = days[now.getDay()];\n    let hours = now.getHours();\n    let min = now.getMinutes();\n    if (min < 10) {\n      min = `0${min}`;\n    }\n    let time = `${hours}:${min}`;\n    setDate(time);\n    setDay(day);\n  }\n  let EmojiSrc = `http://openweathermap.org/img/wn/${props.emoji}@2x.png`;\n  if (props.submit === true || props.submit === \"start\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Weather\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: props.city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: props.desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CurrentTemp, {\n        submit: props.submit,\n        city: props.city,\n        desc: props.desc,\n        temp: props.temp,\n        emoji: EmojiSrc,\n        hum: props.hum,\n        wind: props.wind\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Forecast, {\n        forecast: props.forecast\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n}\n_s(Weather, \"H77Brp+3tY+LtBLAtlppQ7Z10NQ=\");\n_c = Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useState","CurrentTemp","Forecast","jsxDEV","_jsxDEV","Weather","props","_s","date","setDate","window","onload","loadDate","days","now","Date","day","getDay","hours","getHours","min","getMinutes","time","setDay","EmojiSrc","emoji","submit","className","children","city","fileName","_jsxFileName","lineNumber","columnNumber","desc","temp","hum","wind","forecast","_c","$RefreshReg$"],"sources":["/Users/jimen/Dropbox/Mac/Documents/react-weather/src/Weather.js"],"sourcesContent":["import React, {useState} from \"react\";\n\n\nimport CurrentTemp from \"./CurrentTemp\";\nimport Forecast from \"./Forecast\";\n\nexport default function Weather(props) {\n\n\n    let [date , setDate] = useState(null);\n\n    window.onload = function(){\n        loadDate();\n    }\n\n    let days = [\n        \"Mon\",\n        \"Tue\",\n        \"Wed\",\n        \"Thurs\",\n        \"Fri\",\n        \"Sat\",\n        \"Sun\",\n      ];\n    \n    function loadDate() {\n        let now = new Date();\n        let day = days[now.getDay()];\n        let hours = now.getHours();\n        let min = now.getMinutes();\n        if (min < 10) {\n          min = `0${min}`;\n        }\n        let time = `${hours}:${min}`;\n      \n        setDate  (time);\n        setDay(day);\n\n      }\n\nlet EmojiSrc = `http://openweathermap.org/img/wn/${props.emoji}@2x.png`;\n\n\n    if (props.submit === true || props.submit === \"start\"){return (\n      <div className=\"Weather\">\n        <h1>{props.city}</h1>\n\n        <div className=\"info\">{date}</div>\n        <div className=\"info\">{props.desc}</div>\n\n      <CurrentTemp submit = {props.submit} city = {props.city} desc= {props.desc}  temp = {props.temp} emoji = {EmojiSrc} hum = {props.hum} wind = {props.wind}/>\n      <Forecast forecast = {props.forecast}/>\n      </div>\n    );\n    }\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAGrC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,eAAe,SAASC,OAAOA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAGnC,IAAI,CAACC,IAAI,EAAGC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAErCU,MAAM,CAACC,MAAM,GAAG,YAAU;IACtBC,QAAQ,CAAC,CAAC;EACd,CAAC;EAED,IAAIC,IAAI,GAAG,CACP,KAAK,EACL,KAAK,EACL,KAAK,EACL,OAAO,EACP,KAAK,EACL,KAAK,EACL,KAAK,CACN;EAEH,SAASD,QAAQA,CAAA,EAAG;IAChB,IAAIE,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;IACpB,IAAIC,GAAG,GAAGH,IAAI,CAACC,GAAG,CAACG,MAAM,CAAC,CAAC,CAAC;IAC5B,IAAIC,KAAK,GAAGJ,GAAG,CAACK,QAAQ,CAAC,CAAC;IAC1B,IAAIC,GAAG,GAAGN,GAAG,CAACO,UAAU,CAAC,CAAC;IAC1B,IAAID,GAAG,GAAG,EAAE,EAAE;MACZA,GAAG,GAAI,IAAGA,GAAI,EAAC;IACjB;IACA,IAAIE,IAAI,GAAI,GAAEJ,KAAM,IAAGE,GAAI,EAAC;IAE5BX,OAAO,CAAGa,IAAI,CAAC;IACfC,MAAM,CAACP,GAAG,CAAC;EAEb;EAEN,IAAIQ,QAAQ,GAAI,oCAAmClB,KAAK,CAACmB,KAAM,SAAQ;EAGnE,IAAInB,KAAK,CAACoB,MAAM,KAAK,IAAI,IAAIpB,KAAK,CAACoB,MAAM,KAAK,OAAO,EAAC;IAAC,oBACrDtB,OAAA;MAAKuB,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACtBxB,OAAA;QAAAwB,QAAA,EAAKtB,KAAK,CAACuB;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAErB7B,OAAA;QAAKuB,SAAS,EAAC,MAAM;QAAAC,QAAA,EAAEpB;MAAI;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAClC7B,OAAA;QAAKuB,SAAS,EAAC,MAAM;QAAAC,QAAA,EAAEtB,KAAK,CAAC4B;MAAI;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAE1C7B,OAAA,CAACH,WAAW;QAACyB,MAAM,EAAIpB,KAAK,CAACoB,MAAO;QAACG,IAAI,EAAIvB,KAAK,CAACuB,IAAK;QAACK,IAAI,EAAG5B,KAAK,CAAC4B,IAAK;QAAEC,IAAI,EAAI7B,KAAK,CAAC6B,IAAK;QAACV,KAAK,EAAID,QAAS;QAACY,GAAG,EAAI9B,KAAK,CAAC8B,GAAI;QAACC,IAAI,EAAI/B,KAAK,CAAC+B;MAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC3J7B,OAAA,CAACF,QAAQ;QAACoC,QAAQ,EAAIhC,KAAK,CAACgC;MAAS;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAER;AACJ;AAAC1B,EAAA,CAjDuBF,OAAO;AAAAkC,EAAA,GAAPlC,OAAO;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}