[{"/Users/jimen/Dropbox/Mac/Documents/react-weather/src/index.js":"1","/Users/jimen/Dropbox/Mac/Documents/react-weather/src/App.js":"2","/Users/jimen/Dropbox/Mac/Documents/react-weather/src/reportWebVitals.js":"3","/Users/jimen/Dropbox/Mac/Documents/react-weather/src/Search.js":"4","/Users/jimen/Dropbox/Mac/Documents/react-weather/src/Weather.js":"5","/Users/jimen/Dropbox/Mac/Documents/react-weather/src/CurrentTemp.js":"6","/Users/jimen/Dropbox/Mac/Documents/react-weather/src/Forecast.js":"7","/Users/jimen/Dropbox/Mac/Documents/react-weather/reactweather/src/index.js":"8","/Users/jimen/Dropbox/Mac/Documents/react-weather/reactweather/src/reportWebVitals.js":"9","/Users/jimen/Dropbox/Mac/Documents/react-weather/reactweather/src/App.js":"10","/Users/jimen/Dropbox/Mac/Documents/react-weather/reactweather/src/Search.js":"11","/Users/jimen/Dropbox/Mac/Documents/react-weather/reactweather/src/Weather.js":"12","/Users/jimen/Dropbox/Mac/Documents/react-weather/reactweather/src/CurrentTemp.js":"13","/Users/jimen/Dropbox/Mac/Documents/react-weather/reactweather/src/Forecast.js":"14","/Users/jimen/Dropbox/Mac/Documents/react-weather/reactweather/src/Temp.js":"15"},{"size":633,"mtime":1692897455512,"results":"16","hashOfConfig":"17"},{"size":205,"mtime":1692629395588,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1692627974573,"results":"19","hashOfConfig":"17"},{"size":3958,"mtime":1692982143018,"results":"20","hashOfConfig":"17"},{"size":1859,"mtime":1692982348186,"results":"21","hashOfConfig":"17"},{"size":1904,"mtime":1692982631885,"results":"22","hashOfConfig":"17"},{"size":3873,"mtime":1692889089243,"results":"23","hashOfConfig":"17"},{"size":818,"mtime":1693310612561,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1693310106364,"results":"26","hashOfConfig":"25"},{"size":175,"mtime":1693310106361,"results":"27","hashOfConfig":"25"},{"size":5071,"mtime":1693316799448,"results":"28","hashOfConfig":"25"},{"size":581,"mtime":1693316724409,"results":"29","hashOfConfig":"25"},{"size":862,"mtime":1693316668574,"results":"30","hashOfConfig":"25"},{"size":3873,"mtime":1693310106362,"results":"31","hashOfConfig":"25"},{"size":1257,"mtime":1693310106363,"results":"32","hashOfConfig":"25"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1deiysd",{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1kuxwmm",{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"71"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jimen/Dropbox/Mac/Documents/react-weather/src/index.js",[],[],"/Users/jimen/Dropbox/Mac/Documents/react-weather/src/App.js",["81"],[],"/Users/jimen/Dropbox/Mac/Documents/react-weather/src/reportWebVitals.js",[],[],[],"/Users/jimen/Dropbox/Mac/Documents/react-weather/src/Search.js",[],[],"/Users/jimen/Dropbox/Mac/Documents/react-weather/src/Weather.js",[],[],"/Users/jimen/Dropbox/Mac/Documents/react-weather/src/CurrentTemp.js",[],[],"/Users/jimen/Dropbox/Mac/Documents/react-weather/src/Forecast.js",[],[],"/Users/jimen/Dropbox/Mac/Documents/react-weather/reactweather/src/index.js",[],[],"/Users/jimen/Dropbox/Mac/Documents/react-weather/reactweather/src/reportWebVitals.js",[],[],"/Users/jimen/Dropbox/Mac/Documents/react-weather/reactweather/src/App.js",[],[],"/Users/jimen/Dropbox/Mac/Documents/react-weather/reactweather/src/Search.js",["82"],[],"import React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport Weather from \"./Weather\";\n\nimport \"./App.css\";\n\nexport default function Search() {\n\n\n  //variables\n\n\n  let [ready, setReady] = useState (false);\n  let [forecastReady , setForecastReady] = useState(false);\n\n  let [submit, setSubmit] = useState(\"start\");\n\n\n\n  let [date , setDate ] = useState([]);\n\n  const APIKEY = `4da2e8bf3a200c5adda75dotf32bef74`;\n\n\n\n\n  let [city, setCity] = useState(\"London\");\n\n\n \n  \n//date arrays\n  let days = [\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\",\n      \"Sunday\",\n    ];\n  \n\n\n  //date function\n  function loadDate() {\n      let now = new Date();\n      let fullday = now.getDate();\n      let day = days[now.getDay()];\n      let hours = now.getHours();\n      let min = now.getMinutes();\n      if (min < 10) {\n        min = `0${min}`;\n      }\n      let time = `${hours}:${min}`;\n    \n      setDate([\n      (fullday),\n       (time),\n     (day)\n      ])\n\n      \n    }\n\n \n\n    //on window load\n    MyComponent();\n\n    function MyComponent() {\n       useEffect(() => {\n          loadData();\n       }, []); // Pass an empty array to only call the function once on mount.\n       \n       function loadData() {\n  \n  \n        if (submit === \"start\"){\n          loadDate();\n          makeCall();\n        }\n          // Fetch data or perform other loading logic here\n       }\n       \n       // ... component render logic\n    }\n\n\n\n\n//for Current Temp\n\nlet [currentWeatherData , setCurrentWeatherData] = useState({});\n\n\n//for forecast\n\nlet[forecast , setForecast ] = useState({});\n\n\n//forecast array of objects \n\n\n\n\n//get current weather response and call get forecast function\n\n  function getData(response) {\n\n\n    setCurrentWeatherData({\n      city:response.data.city,\n      desc :response.data.condition.description,\n      temp : response.data.temperature.current,\n      hum : response.data.temperature.humidity,\n      wind :response.data.wind.speed ,\n      icon:response.data.condition.icon_url,\n      lon:response.data.coordinates.longiude ,\n      lat:response.data.coordinates.latitude\n    })\n\n\n\n    console.log(currentWeatherData);\n    setReady(true);\n\n\n    console.log(response);\n\n  }\n\n\n  //get forecast response and set variables\n\n  function getForecast(response){\n\n    setForecast (\n      {\n         date: response.data.daily[0].time ,\n         temp: response.data.daily[0].temperature.day,\n         emoji:response.data.daily[0].condition.icon_url\n  \n      },\n      {\n         date: response.data.daily[1].time ,\n         temp:response.data.daily[1].temperature.day,\n         emoji:response.data.daily[1].condition.icon_url\n      },\n      {\n          date: response.data.daily[2].time ,\n          temp:response.data.daily[2].temperature.day,\n          emoji:response.data.daily[2].condition.icon_url\n      \n      },\n      {\n          date: response.data.daily[3].time ,\n          temp:response.data.daily[3].temperature.day,\n          emoji:response.data.daily[3].condition.icon_url\n      },\n      {\n          date: response.data.daily[4].time ,\n          temp:response.data.daily[4].temperature.day,\n          emoji:response.data.daily[4].condition.icon_url\n      }\n    )\n    \n\n    setForecastReady(true);\n  }\n\n\n\n  //change value of city when typed\n  function changeCity(event) {\n    event.preventDefault();\n    setCity(event.target.value);\n    setSubmit(false);\n      \n   \n  }\n\n\n\n\n\n\n//if search pressed search city\n  function searchCity(event) {\n    setSubmit(true);\n    event.preventDefault();\n  \n      makeCall();\n   \n\n    \n    \n  }\n\n\n//make call when submit\n\n\n\n//make api call when searched button pressed\n\n  function makeCall(){\n\n    getCurrentWeather();\n    getForecastData();\n    loadDate();\n   \n  }\n\n\n  function getCurrentWeather(){\n    let url = `https://api.shecodes.io/weather/v1/current?query=${city}&key=${APIKEY}&units=metric`;\n    //setNewcity(city);\n    axios.get(url).then(getData);\n  }\n\n  //get forecast data when searched pressed\n  \n  function getForecastData(){\n    if (submit){ \n    let forecastUrl = `https://api.shecodes.io/weather/v1/forecast?query=${city}&key=${APIKEY}&units=metric`;\n\n    axios.get(forecastUrl).then(getForecast);\n   \n  }\n}\n\n\n\n  if (ready){return (\n    <div className=\"Search\">\n      <form onSubmit={searchCity}>\n        <input\n          type=\"search\"\n          placeholder=\"Type a city...\"\n          onChange={changeCity}\n        ></input>\n        <button type=\"submit\" className=\"btn btn-primary\" >Search</button>\n      </form>\n\n      <Weather date = {date} forecast = {forecast} submit={submit} currentWeather = {currentWeatherData}/>\n    </div>\n\n\n  )}else {\n    return(\n    <div className=\"Search\">\n      <form onSubmit={searchCity}>\n        <input\n          type=\"search\"\n          placeholder=\"Type a city...\"\n          onChange={changeCity}\n        ></input>\n        <button type=\"submit\" className=\"btn btn-primary\" >Search</button>\n      </form>\n\n      <div className=\"text-center\">Loading...</div>\n\n    </div>\n    )\n  }\n}\n","/Users/jimen/Dropbox/Mac/Documents/react-weather/reactweather/src/Weather.js",["83"],[],"import React  from \"react\";\n\n\n\nimport CurrentTemp from \"./CurrentTemp\";\n//import Forecast from \"./Forecast\";\n\nexport default function Weather(props) {\n\n\n     \n\n\n\n\n\n        \n    return (\n      <div className=\"Weather\">\n        <h1>{props.currentWeather.city}</h1>\n\n        <div className=\"info\">{props.date [2]} {props.date[0]} ,{props.date[1]}</div>\n        <div className=\"info\">{props.desc}</div>\n\n      <CurrentTemp date = {props.date} submit={props.submit} currentWeather = {props.currentWeather}/>\n      {/*<Forecast forecast = {props.forecast}/>*/}\n      </div>\n    );\n   \n}\n","/Users/jimen/Dropbox/Mac/Documents/react-weather/reactweather/src/CurrentTemp.js",[],[],"/Users/jimen/Dropbox/Mac/Documents/react-weather/reactweather/src/Forecast.js",[],[],"/Users/jimen/Dropbox/Mac/Documents/react-weather/reactweather/src/Temp.js",[],[],{"ruleId":"84","severity":1,"message":"85","line":1,"column":8,"nodeType":"86","messageId":"87","endLine":1,"endColumn":12},{"ruleId":"84","severity":1,"message":"88","line":16,"column":8,"nodeType":"86","messageId":"87","endLine":16,"endColumn":21},{"ruleId":"89","severity":1,"message":"90","line":22,"column":32,"nodeType":"91","messageId":"92","endLine":22,"endColumn":46,"fix":"93"},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'forecastReady' is assigned a value but never used.","no-whitespace-before-property","Unexpected whitespace before property 2.","MemberExpression","unexpectedWhitespace",{"range":"94","text":"95"},[305,306],""]